"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const removeLinks_1=require("../lib/removeLinks"),removePunctuation_1=require("../lib/removePunctuation"),removeRT=e=>{const r=new RegExp(/(RT|via).*?:/,"g");return e.replace(r,"")};exports.removeRT=removeRT;const removeHashtag=e=>{const r=new RegExp(/(#\w*.[^\W])/,"g");return e.replace(r,"")};exports.removeHashtag=removeHashtag;const removeTag=e=>{const r=new RegExp(/(@\w*.[\s])/,"g");return e.replace(r,"")};exports.removeTag=removeTag;const removeNumber=e=>{const r=new RegExp(/(\d)/,"g");return e.replace(r,"")};exports.removeNumber=removeNumber;const clearTweets=e=>{let r;return r=removeLinks_1.removeLinks(e),r=removeRT(r),r=removeHashtag(r),r=removeTag(r),r=removePunctuation_1.removePunctuation(r),r=removeNumber(r),r=removePunctuation_1.removeBlankSpace(r)};exports.clearTweets=clearTweets,Object.defineProperty(exports,"__esModule",{value:!0});const accents="ÀÁÂÃÄÅàáâãäåÒÓÔÕÕÖŐòóôõöőÈÉÊËèéêëðÇĈçĉÐǵĝĜǴĥḧḦĤÌÍÎÏìíîïĵĴḱḰĺĹḿḾńǹŃǸÙÚÛÜŰùúûüűÑñṕṔŕŔśŝŜŚŠšẗǘǜṽṼẃẁŵẅẄẂẀŴẍẌýỳŷỹÿýỸÝỲŶŸžźẑẐŹŽ",noAccents="AAAAAAaaaaaaOOOOOOOooooooEEEEeeeeeCCccDggGGhhHHIIIIiiiijJkKlLmMnnNNUUUUUuuuuuNnpPrRssSSSstuuvVwwwwWWWWxXyyyyyyYYYYYzzzZZZ",removeAccents=e=>{try{const r={};return accents.split("").forEach((e,n)=>r[e]=noAccents[n]),e.replace(/[^A-Za-z0-9]/g,e=>r[e]||e)}catch(e){console.log('This function can handle just strings.\nExample: removeAccents("All your string here.")',e)}};exports.removeAccents=removeAccents;const removeAccentsArray=e=>{try{const r={},n=[];accents.split("").forEach((e,n)=>r[e]=noAccents[n]);for(const o in e)n.push(e[o].replace(/[^A-Za-z0-9]/g,e=>r[e]||e));return n}catch(e){console.log('This function can handle just string arrays.\nExample: removeAcentsArray(["First", "Second", "Third"])',e)}};exports.removeAccentsArray=removeAccentsArray,Object.defineProperty(exports,"__esModule",{value:!0});const removeLinks=(e,r)=>{try{const n=r?new RegExp(`${r}://*.[^\\s]+`,"g"):new RegExp("https?://*.[^\\s]+","g");return e.replace(n,"")}catch(e){console.log('This function can handle just strings.\nExample: removeLinks("All your string here")',e)}};exports.removeLinks=removeLinks;const removeLinksArray=(e,r)=>{try{const n=r?new RegExp(`${r}://*.[^\\s]+`,"g"):new RegExp("https?://*.[^\\s]+","g"),o=[];for(const r in e)o.push(e[r].replace(n,""));return o}catch(e){console.log('This function can handle just string arrays.\nExample: removeAcentsArray(["First", "Second", "Third"])',e)}};exports.removeLinksArray=removeLinksArray,Object.defineProperty(exports,"__esModule",{value:!0});const punctuations="^a-zA-Z\\d\\sÀÁÂÃÄÅàáâãäåÒÓÔÕÕÖŐòóôõöőÈÉÊËèéêëðÇĈçĉÐǵĝĜǴĥḧḦĤÌÍÎÏìíîïĵĴḱḰĺĹḿḾńǹŃǸÙÚÛÜŰùúûüűÑñṕṔŕŔśŝŜŚŠšẗǘǜṽṼẃẁŵẅẄẂẀŴẍẌýỳŷỹÿýỸÝỲŶŸžźẑẐŹŽ",removePunctuation=e=>{const r=new RegExp(`[${punctuations}]`,"g");return(e=e.replace(r,"")).replace(/\s\s+/g," ")};exports.removePunctuation=removePunctuation;const removeBlankSpace=e=>e.replace(/\s\s+/g," ");exports.removeBlankSpace=removeBlankSpace;const removePunctuationArray=e=>{const r=new RegExp(`[${punctuations}]`,"g"),n=[];for(const o in e)n.push(e[o].replace(r,"").replace(/\s\s+/g," "));return n};exports.removePunctuationArray=removePunctuationArray;const removeBlankSpaceArray=e=>{const r=[];for(const n in e)r.push(e[n].replace(/\s\s+/g," "));return r};exports.removeBlankSpaceArray=removeBlankSpaceArray;